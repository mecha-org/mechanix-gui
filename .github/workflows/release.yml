name: Release
on:
  push:
    branches:
      - dev-v1
  release:
    types: [created, edited]
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  MACOSX_DEPLOYMENT_TARGET: 10.7

jobs:
  # Build sources for every OS
  github_build:
    name: Build release binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: mechanix-zbus-services-x86_64-unknown-linux-gnu.tar.gz

          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: mechanix-zbus-services-_arm64.deb
            package: mechanix-zbus-services

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      RUSTFLAGS: ${{ matrix.rustflags || '' }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

          target: ${{ matrix.target }}

      - name: Setup | Install cross [Linux]
        if: matrix.os == 'ubuntu-latest'
        uses: taiki-e/install-action@cross

      - name: Install dependencies
        run: |
          sudo apt install -y libdbus-1-dev pkg-config
      - name: Build | Build [Cross]
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd services
          cargo build --release --target ${{ matrix.target }}
      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os == 'ubuntu-latest' && !matrix.package
        run: |
            cd services/target/${{ matrix.target }}/release/
            tar czvf ../../../../${{ matrix.name }} mechanix-zbus-services
            cd -          
      - name: Build | Build [Deb]
        if: matrix.os == 'ubuntu-latest' && matrix.name == 'mechanix-zbus-services-x86_64-unknown-linux-gnu.deb'
        run: |
          rustup update
          cargo install cargo-deb
          cd services
          cargo deb -p ${{ matrix.package }}    
      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os == 'ubuntu-latest' && matrix.name == 'mechanix-zbus-services-x86_64-unknown-linux-gnu.deb'
        run: |
            cd services/target/debian/
            tar czvf ../../../${{ matrix.name }} mechanix-zbus-services*
            cd -    
      - name: Release | Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  # Create GitHub release with Rust build targets and release notes
  github_release:
    name: Create GitHub Release
    needs: github_build
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
        with:
          files: |
            mecha*/mecha*
          tag_name: Release ${{ github.head_ref }}